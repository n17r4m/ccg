{"changed":true,"filter":false,"title":"Cards.js","tooltip":"/Cards.js","value":"Cards = new (function(){\n    \n    // Card Definitions\n    \n    var cards = {\n        \"Tentacle Eyes\" : {\n            description: \"Turn your target's eyes into tentacles! They cannot see their cards.\",\n            action: function(){\n                this.opponent.cards.forEach(function(card){\n                    card.faceDown()\n                });\n            },\n            turns: 2\n        },\n        \"Ghoul Hands\" : {\n            description: \"Target discards their hand\",\n            action: function(){\n                this.opponent.cards.forEach(function(card){\n                    card.discard()\n                })\n            },\n            turns: 1\n        },\n        \"Spontaneous Combustion\" : {\n            description: \"Target skips a turn\",\n            action: function(){\n                this.opponent.skipTurns += 1\n            },\n            turns: 1\n        }\n    }\n    \n    \n    // Cards: functional setup\n    \n    cardFns = [\n        function use(target){\n            target.active.push(\n                this.owner.cards.splice(this.owner.cards.indexOf(this), 1)\n            )\n        },\n        function discard(){\n            this.owner.waste.push(\n                this.owner.cards.splice(this.owner.cards.indexOf(this), 1)\n            )\n        },\n        function faceDown(){\n            this.el.backgroundImage = \"/card/back.jpg\";\n        },\n        function faceUp(){\n            this.el.backgroundImage = \"/card/\" + nameToImgFile(name);\n        },\n        function set(stats){\n            for (var i in stats){\n                this[i] = stats[i];\n            }\n        }\n    ]\n    \n    var keys = Object.keys(cards);\n    \n    keys.forEach(function(name){\n        var card = cards[name]\n        card.name = name;\n        card.owner = null;\n        card.hidden = false;\n        cardFns.forEach(function(fn){\n           card[fn.name] = fn; \n        });\n    })\n    \n    \n    // Class functions\n    \n    this.random = function(){\n        return clone(cards[ keys[ keys.length * Math.random() << 0 ] ]);\n    }\n    \n    this.byName = function(name){\n        return clone(cards[name]);\n    }\n    \n    \n    \n})()\n\n\n// Utility functions\nfunction clone(card){\n    return $.extend(true, {}, card);\n}\n\nfunction nameToImgFile(name){\n    return name.replace(\" \", \"_\") + \"jpg\";\n}\n\n\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":89,"column":36},"end":{"row":89,"column":37},"action":"remove","lines":[" "],"id":2}]]},"ace":{"folds":[],"scrolltop":60,"scrollleft":0,"selection":{"start":{"row":89,"column":36},"end":{"row":89,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1443910729128}